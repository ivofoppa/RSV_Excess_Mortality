filename <- paste0('data_National_2010_16_5ag.dat')
setwd('..')
setwd("./RSVdata")
datarr <- read.table(file = filename, header = T)
datarr5 <- datarr[which(datarr$age==5),]
rcu <- datarr5$rcu
RSV <- datarr5$RSV
rsvstd <- RSV/(max(RSV))*max(rcu - min(rcu)) + min(rcu)
H3 <- datarr5$AH3
H3std <- H3/(max(H3))*max(rcu - min(rcu)) + min(rcu)
corrdata <- data.frame(rcu,rsvstd,H3std)
corrdata <- corrdata[order(corrdata$rcu),]
plot(corrdata$rcu,corrdata$rsvstd)
plot(corrdata$rcu,corrdata$H3std)
cor.test(rcu,H3)
cor.test(rcu,RSV)
rsvcorr <- cor.test(rcu,RSV)
rsvcorr$estimate
round(rsvcorr$estimate,digits = 3)
round(as.numeric(rsvcorr$estimate,digits = 3))
as.numeric(round(rsvcorr$estimate,digits = 3))
as.numeric(round(rsvcorr$p.value,digits = 3))
H3corr <- cor.test(rcu,H3)
H3corr_coef <- as.numeric(round(H3corr$estimate,digits = 3))
H3corr_p <- as.numeric(round(H3corr$p.value,digits = 3))
H3corr_coef
H3corr_p
150/65
###############################################################################
###############################################################################
###  Ivo M. Foppa, Sep 2018---National RSV excess mort. analysis          #####
###############################################################################
###############################################################################
# setwd('C:/Users/VOR1/Documents/Git projects/RSV_Excess_Mortality')
setwd('../')
setwd('./RSVcode')
source('Set_environmental_variables.R')
###################################################################################################
N
paste0('muB0[3:',N,']')
variables7 <- c(paste0('muB0[3:',N,']'))
ag <- 5
nadapt <- 1000
niter <- 5000
setwd('../')
setwd('./RSVcode')
source('Set_environmental_variables.R')
###################################################################################################
###################################################################################################
variables7 <- c('EMRSV1tot','EMRSV2tot','EMRSV3tot','EMRSV4tot','EMRSV5tot','EMRSV6tot','EMRSVtot',
'EMflu1tot','EMflu2tot','EMflu3tot','EMflu4tot','EMflu5tot','EMflu6tot','EMflutot')
###################################################################################################
nadapt <- 1000
niter <- 5000
variables7 <- c(paste0('muB0[3:',N,']'))
agdata <- datarr[which(datarr$age==ag),]
RSV <- agdata$RSV
flumort <- agdata$flu
mort <- agdata$rcu - flumort
pop <- agdata$pop
N <- length(mort)
time <- (1:N)/N
###################################################################################################
ndf <- round((nknots + 1) * nseas/(nseas*52.5)*N)
nsarr <- ns(time,df = ndf)[,]  ## defining basis matrix
###################################################################################################
mod <- lm(mort/pop ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
###################################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
###################################################################################################
# rinit <- (mort/(exp(b0init)*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit
)}
setwd('..')
setwd('./RSVmodels')
j.model <- jags.model(file=model1.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
niter <- 1000
agdata <- datarr[which(datarr$age==ag),]
RSV <- agdata$RSV
flumort <- agdata$flu
mort <- agdata$rcu - flumort
pop <- agdata$pop
N <- length(mort)
time <- (1:N)/N
###################################################################################################
ndf <- round((nknots + 1) * nseas/(nseas*52.5)*N)
nsarr <- ns(time,df = ndf)[,]  ## defining basis matrix
###################################################################################################
mod <- lm(mort/pop ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
###################################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
###################################################################################################
# rinit <- (mort/(exp(b0init)*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit
)}
setwd('..')
setwd('./RSVmodels')
j.model <- jags.model(file=model1.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
codaarr <- rbind(j.samples[[1]],j.samples[[2]],j.samples[[3]],deparse.level=0)
head(codaarr)
variables7 <- c(paste0('muB0[3:',N,']'),'b20','b21','b22')
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
codaarr <- rbind(j.samples[[1]],j.samples[[2]],j.samples[[3]],deparse.level=0)
codaarr <- data.frame(codaarr)
mu <- sapply(3:N, function(x) eval(parse(text = paste0('median(codaarr$muB0[',x,'])'))))
warnings()
x <- 100
paste0('median(codaarr$muB0[',x,'])')
eval(parse(text = paste0('median(codaarr$muB0[',x,'])')))
mu <- sapply(3:N, function(x) median(codaarr[,x]))
plot(mu)
plot(mort[-c(1:2)])
lines(mu,col = 'red')
beta20 <- median(codaarr[,N + 1])
beta21 <- median(codaarr[,N + 2])
beta22 <- median(codaarr[,N + 3])
beta20 <- median(codaarr[,N + 1])
beta20
mu <- sapply(3:N, function(x) eval(parse(test = paste0('median(codaarr$muB0.',x,'.)'))))
b20 <- median(codaarr$b20)
b21 <- median(codaarr$b21)
b22 <- median(codaarr$b22)
rsv0 <- RSV[1:N-2]
rsv1 <- RSV[2:N-1]
rsv2 <- RSV[3:N]
rsv0 <- RSV[1:N-2]
rsv0 <- RSV[1:(N-2)]
rsv1 <- RSV[2:(N-1)]
rsv2 <- RSV[3:N]
rsv2 <- RSV[1:(N-2)]
rsv1 <- RSV[2:(N-1)]
rsv0 <- RSV[3:N]
rsvEM <- (rsv0*b20 + rsv1*b21 + rsv2*b22) * pop[3:N]
plot(mort[-c(1:2)])
lines(mu + rsvEM,col = 'red')
mu1 <- rcu - .1*rsvEM
mu1 <- rcu - .1*rsvEM
mu2 <- rcu - 20*rsvEM
mu1 <- rcu - .1*rsvEM
mu1 <- rcu[3:N] - .1*rsvEM
mu2 <- rcu[3:N] - 20*rsvEM
plot(mu1,type = 'l')
lines(mu2,col = 'red')
mu2 <- rcu[3:N] - 10*rsvEM
plot(mu1,type = 'l')
lines(mu2,col = 'red')
plot(mu2,type = 'l')
mu1 <- rcu[3:N] - .1*rsvEM
mu2 <- rcu[3:N] - 10*rsvEM
mu3 <- rcu[3:N] - 2*rsvEM
mu4 <- rcu[3:N] - 5*rsvEM
mu5 <- rcu[3:N] - .5*rsvEM
cols <- rainbow(5)
plot(mu2,type = 'l',ylim = c(0,max(c(mu1,mu2,mu3,mu4,mu5))),col = colls[1])
cols <- rainbow(5)
plot(mu2,type = 'l',ylim = c(0,max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1])
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,']')
}
plot(mu2,type = 'l',ylim = c(0,max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1])
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,']')))
}
paste0('lines(mu',k,',col = cols[',k,']')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
cols <- rainbow(6)
plot(mu2,type = 'l',ylim = c(0,max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1])
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsvEM,col = cols[6])
plot(mu2,type = 'l',ylim = c(0,max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
plot(mu2,type = 'l',ylim = c(max(c(mu1,mu2,mu3,mu4,mu5),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsvEM,col = cols[6])
plot(mu2,type = 'l',ylim = c(max(c(mu1,mu2,mu3,mu4,mu5),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsvEM,col = cols[6])
plot(mu2,type = 'l',ylim = c(max(c(mu1,mu2,mu3,mu4,mu5)),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
plot(mu2,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5)),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
plot(mu2,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5)),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5)),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsvEM,col = cols[6])
cols <- rainbow(7)
mu1 <- rcu[3:N] - .1*rsvEM
mu2 <- rcu[3:N] - .5*rsvEM
mu3 <- rcu[3:N] - rsvEM
mu4 <- rcu[3:N] - 2*rsvEM
mu5 <- rcu[3:N] - 5*rsvEM
mu6 <- rcu[3:N] - 10*rsvEM
cols <- rainbow(7)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5)),max(c(mu1,mu2,mu3,mu4,mu5))),col = cols[1], ylab = '',xlab = 'Index Week')
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:5){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsvEM,col = cols[7])
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n' )
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
horiz = T)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
horiz = T)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
ncol = 5)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
ncol = 2)
setwd('../') ## change to root directory
setwd('./RSVwriteup')
pdf('BL.pdf',paper='USr',height = 8.5,width = 11)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
ncol = 2)
dev.off()
dev.off()
pdf('BL.pdf',paper='USr',height = 8.5,width = 11)
plot(mu1,type = 'l',ylim = c(min(c(mu1,mu2,mu3,mu4,mu5,mu6)),max(c(mu1,mu2,mu3,mu4,mu5,mu6))),col = cols[1], ylab = '',xlab = 'Index Week')
for (k in 2:6){
eval(parse(text = paste0('lines(mu',k,',col = cols[',k,'])')))
}
rsv <- RSV/max(RSV)*max(c(mu1,mu2,mu3,mu4,mu5,mu6))*.3
lines(rsv[3:N],col = cols[7])
legend('bottom',c('BL fact 0.1','BL fact 0.5','BL fact 1','BL fact 2','BL fact 5','BL fact 10','RSV'), lty = 1, col = cols,bty = 'n',
ncol = 5)
dev.off()
