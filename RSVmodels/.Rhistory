knts <- seq(0,10,length.out = 5)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- c(1,5,8)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- c(1,5,8)
knts
knts <- seq(0,10,length.out = 5)
knts
knts <- round(seq(0,10,length.out = 5))
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- seq(0,10,length.out = 10)
knts
knts,<-,c(0.000000,1.111111,2.222222,3.333333,4.444444,5.555556,6.666667,7.777778,8.888889,10.000000)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- c(0.000000,1.111111,2.222222,3.333333,4.444444,5.555556,6.666667,7.777778,8.888889,10.000000)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- c(1.111111,2.222222,3.333333,4.444444,5.555556,6.666667,7.777778,8.888889,10.000000)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- seq(0.1,9.9,length.out = 10)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
tme <- seq(0,10,length.out = 100)
knts <- seq(0.1,9.9,length.out = 10)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
knts <- seq(0.1,9.9,length.out = 7)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
b1 <- c(1,.5,.25,0,.25,.5,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
knts <- seq(0.1,9.9,length.out = 6)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
b1 <- c(1,.5,.25,0,.25,.5,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
for (k in 1:20){
b1 <- runif(7,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
lines(ls1)
}
knts <- seq(0.1,9.9,length.out = 20)
bmat <- array(as.numeric(ns(tme,knots = knts)),dim = c(length(tme),(length(knts)+1)))
b1 <- runif(length(knts)+1,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
for (k in 1:20){
b1 <- runif(length(knts)+1,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
lines(ls1)
}
b1 <- runif(length(knts)+1,-1,1)
ls1 <- as.numeric(sapply(1:length(tme),function(x) bmat[x,]%*%b1))
plot(ls1, type = 'l',ylim = c(-1,1.5))
for (k in 1:10){
b1 <- runif(length(knts)+1,-1,1)
3*3
install.packages("packrat")
x1 <- 200
x0 <- 300
N1 <- 1000
N0 <- N1
or <- x1/(N1-x1)/(x0/(N0-x0))
rr <- x1/N1/(x0/N0)
cat(paste0('OR=',or,'   ','RR=',rr))
cat(paste0('OR=',round(or,digits = 3),'   ','RR=',round(rr,digits = 3))
)
cat(paste0('VE=',round(1-or,digits = 3),'   ','"Efficac."=',round(1-rr,digits = 3)))
source('Set_environmental_variables.R')
###################################################################################################
### Set directory path here ... remember to use forward slashes ... ###############################
###################################################################################################
bfolder <- "C:/Users/vor1/Dropbox/Misc work/RSV/RSV_Excess_Mortality/" #this is an example ...
#bfolder <- "C:/Users/.../.../" ### put "/" at the end
###################################################################################################
###  Define censdatafile (census data file) and filename (name of analysis file to be created)#####
###################################################################################################
filename <- paste0('data_National_2010_16_5ag.dat')
###################################################################################################
###  Now we are defining all time variables; make sure mmrweeks is present ########################
###################################################################################################
fromyr <- 2010
toyr <- 2016
fromwk <- 40
toseaswk <- 17
towk <- 52
nseas <- toyr - fromyr
### Define 'global N'
setwd(paste0(bfolder,'RSVData'))
mmwrdat<-read.table("mmwrweeks.txt",header=T)
mmwrdat<-mmwrdat[which((mmwrdat$wyear==fromyr&mmwrdat$week>=fromwk)|(mmwrdat$wyear>fromyr&mmwrdat$wyear<toyr)|(mmwrdat$wyear==toyr&mmwrdat$week<=towk)),]
DVDun <- mmwrdat$dvdweek
N <- length(mmwrdat$dvdweek)
seasbeg <- which(mmwrdat$week==fromwk)
seasend <- which(mmwrdat$week==toseaswk)
time <- (1:N)/N
for (k in 1:6){
assign(paste("seas",k,sep=""),c(max(seasbeg[k],3),min(seasend[k],N)))
}
###################################################################################################
###  Length of burn-in period nadapt and the number of iterations used niter ######################
###################################################################################################
nadapt <- 1000
niter <- 5000
###################################################################################################
### Defining other variables relevant the MCMC; make sure that model files exist ##################
###################################################################################################
ag <- 5
nknots <- 4
qual1 <- 'flumort'
model1.file <- paste0('model NS ',qual1,'.txt')
qual2 <- 'vir'
model2.file <- paste0('model NS ',qual2,'.txt')
qual3 <- 'flumort'
model3.file <- paste0('model NS ',qual3,' log-link.txt')
library(splines)
library(R2jags)
###############################################################################
###############################################################################
###  Ivo M. Foppa, Aug 2018---National RSV excess mort. analysis          #####
###############################################################################
###############################################################################
setwd(paste0(bfolder,'RSVData'))
datarr <- data.frame(read.table(file = filename,header = T))
###################################################################################################
###################################################################################################
library(splines)
library(R2jags)
###############################################################################
###############################################################################
###  Ivo M. Foppa, Aug 2018---National RSV excess mort. analysis          #####
###############################################################################
###############################################################################
setwd(paste0(bfolder,'RSVData'))
datarr <- data.frame(read.table(file = filename,header = T))
ag
agdata <- datarr[which(datarr$age==ag),]
RSV <- agdata$RSV
flumort <- agdata$flu
mort <- agdata$rcu - flumort
N <- length(mort)
pop <- agdata$pop
N <- length(mort)
time <- (1:N)/N
###################################################################################################
variables7 <- c('EMRSV1tot','EMRSV2tot','EMRSV3tot','EMRSV4tot','EMRSV5tot','EMRSV6tot','EMRSVtot',
'EMflu1tot','EMflu2tot','EMflu3tot','EMflu4tot','EMflu5tot','EMflu6tot','EMflutot')
#######################################################################################
###################################################################################################
ndf <- round((nknots + 1) * nseas/(nseas*52.5)*N)
nsarr <- ns(time,df = ndf)[,]  ## defining basis matrix
#######################################################################################
mod <- lm(mort ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])/mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
#######################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
#######################################################################################
rinit <- (mort/(b0init*pop))[3:N]
sigmainit <- sapply(1:N,function(x) ifelse(flumort[x] > 0, flumort[x]/pop[x],.1/pop[x]))
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
sigma=sigmainit,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model1.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
codaarr <- rbind(j.samples[[1]],j.samples[[2]],j.samples[[3]],deparse.level=0)
assign(paste0("codaarr",ag),codaarr)
setwd(paste0(bfolder,'RSVMCMCoutput'))
fname <- paste0('codaarr',ag,' RSV ',qual1,' ',nknots,' knots ps ',nadapt,' ',round(niter/5*3),'.RData')
setwd(paste0(bfolder,'RSVMCMCoutput'))
save(codaarr,file = fname)
cat(paste0('\nAge group ',ag,': done\n'))
qual3
qual3 <- 'flumort log-link'
model3.file <- paste0('model NS ',qual3'.txt')
model3.file <- paste0('model NS ',qual3,'.txt')
agdata <- datarr[which(datarr$age==ag),]
RSV <- agdata$RSV
flumort <- agdata$flu
mort <- agdata$rcu - flumort
N <- length(mort)
pop <- agdata$pop
N <- length(mort)
time <- (1:N)/N
###################################################################################################
variables7 <- c('EMRSV1tot','EMRSV2tot','EMRSV3tot','EMRSV4tot','EMRSV5tot','EMRSV6tot','EMRSVtot',
'EMflu1tot','EMflu2tot','EMflu3tot','EMflu4tot','EMflu5tot','EMflu6tot','EMflutot')
#######################################################################################
###################################################################################################
ndf <- round((nknots + 1) * nseas/(nseas*52.5)*N)
nsarr <- ns(time,df = ndf)[,]  ## defining basis matrix
#######################################################################################
mod <- lm(log(mort) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])/mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
#######################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
#######################################################################################
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
codaarr <- rbind(j.samples[[1]],j.samples[[2]],j.samples[[3]],deparse.level=0)
assign(paste0("codaarr",ag),codaarr)
setwd(paste0(bfolder,'RSVMCMCoutput'))
fname <- paste0('codaarr',ag,' RSV ',qual3,' ',nknots,' knots ps ',nadapt,' ',round(niter/5*3),'.RData')
setwd(paste0(bfolder,'RSVMCMCoutput'))
save(codaarr,file = fname)
cat(paste0('\nAge group ',ag,': done\n'))
agetabRSV <- agetabflu <- NULL
fname <- paste0('codaarr',ag,' RSV ',qual,' ',nknots,' knots ps ',nadapt,' ',round(niter/5*3),'.RData')
for (k in 1:14){
assign(paste0('el',k), round(as.vector(quantile(codaarr[,k],prob=c(.5,.05,0.975)))))
}
agetabRSV <- rbind(agetabRSV,c(paste0(el1[1],' (',el1[2],',',el1[3],')'),
paste0(el2[1],' (',el2[2],',',el2[3],')'),
paste0(el3[1],' (',el3[2],',',el3[3],')'),
paste0(el4[1],' (',el4[2],',',el4[3],')'),
paste0(el5[1],' (',el5[2],',',el5[3],')'),
paste0(el6[1],' (',el6[2],',',el6[3],')'),
paste0(el7[1],' (',el7[2],',',el7[3],')')))
agetabflu <- rbind(agetabflu,c(paste0(el8[1],' (',el8[2],',',el8[3],')'),
paste0(el9[1],' (',el9[2],',',el9[3],')'),
paste0(el10[1],' (',el10[2],',',el10[3],')'),
paste0(el11[1],' (',el11[2],',',el11[3],')'),
paste0(el12[1],' (',el12[2],',',el12[3],')'),
paste0(el13[1],' (',el13[2],',',el13[3],')'),
paste0(el14[1],' (',el14[2],',',el14[3],')')))
cat(agetabRSV)
cat(agetabflu)
head(codaarr)
codaarr <- data.frame(codaarr)
plot(codaarr$EMRSVtot,type = 'l')
plot(codaarr$EMflutot,type = 'l')
summary(mod)
mod <- lm(log(mort/pop) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])/mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
#######################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
#######################################################################################
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
summary(mod)
mod <- lm(log(mort/pop) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])/mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
mod <- lm(log(mort) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])/mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
b0init
coeffls
smod <- summary(mod)
smod
coeffls
mod <- lm(log(mort) ~ ns(time, df = ndf))
smod <- summary(mod)
smod
mod <- lm(log(mort) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1]) - mean(pop)
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
b0init
mod <- lm(log(mort/pop) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
b0init
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
codaarr <- rbind(j.samples[[1]],j.samples[[2]],j.samples[[3]],deparse.level=0)
assign(paste0("codaarr",ag),codaarr)
setwd(paste0(bfolder,'RSVMCMCoutput'))
fname <- paste0('codaarr',ag,' RSV ',qual3,' ',nknots,' knots ps ',nadapt,' ',round(niter/5*3),'.RData')
setwd(paste0(bfolder,'RSVMCMCoutput'))
save(codaarr,file = fname)
mod <- lm(log(mort/pop) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
b0init
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
rinit
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
agdata <- datarr[which(datarr$age==ag),]
RSV <- agdata$RSV
flumort <- agdata$flu
mort <- agdata$rcu - flumort
N <- length(mort)
pop <- agdata$pop
N <- length(mort)
time <- (1:N)/N
###################################################################################################
variables7 <- c('EMRSV1tot','EMRSV2tot','EMRSV3tot','EMRSV4tot','EMRSV5tot','EMRSV6tot','EMRSVtot',
'EMflu1tot','EMflu2tot','EMflu3tot','EMflu4tot','EMflu5tot','EMflu6tot','EMflutot')
#######################################################################################
###################################################################################################
ndf <- round((nknots + 1) * nseas/(nseas*52.5)*N)
nsarr <- ns(time,df = ndf)[,]  ## defining basis matrix
#######################################################################################
mod <- lm(log(mort/pop) ~ ns(time, df = ndf))
smod <- summary(mod)
coeffls <- as.numeric(smod$coefficients[,1])
nsinit <- coeffls[2:(ndf + 1)]
b0init <- coeffls[1]
#######################################################################################
data <- list('N'=N,'ndf'=ndf,'ns'=nsarr,'y'=mort,'RSV'=RSV,'pop'=pop, 'flumort'=flumort,
'seas1'=seas1,'seas2'=seas2,'seas3'=seas3,'seas4'=seas4,'seas5'=seas5,'seas6'=seas6)
#######################################################################################
rinit <- (mort/(b0init*pop))[3:N]
inits <- function() {
list(
b0=b0init,
b10=0,
b11=0,
b12=0,
b20=0,
b21=0,
b22=0,
b=nsinit,
logalpha=0.0,
r=rinit
)}
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
j.samples<-coda.samples(j.model, variable.names=variables7, n.iter=niter, thin = 5)
log(b0init + nsinit*nsarr + rinit)
log(b0init + nsinit%*%nsarr + rinit)
length(nsinit)
length(nsarr)
length(nsarr[,1])
length(nsarr[1,])
log(b0init + nsarr%8%nsinit + rinit)
log(b0init + nsarr%*%nsinit + rinit)
log(b0init + nsarr%*%nsinit[1,] + rinit)
log(b0init + nsarr%*%nsinit[,1] + rinit)
log(b0init + nsarr[1,]%*%nsinit + rinit)
log(b0init + nsarr[,1]%*%nsinit + rinit)
head(nsarr)
nsarr[,1]%*%nsinit
head(nsinit)
ndf
length(nsinit)
length(nsarr[,1])
length(nsarr[1,])
log(b0init + nsarr[,1]%*%nsinit + rinit)
nsarr[,1] * nsinit
nsinit
nsarr[1,] * nsinit
nsarr[1,] %* nsinit
nsarr[1,] %*% nsinit
log(b0init + nsarr[1,]%*%nsinit + rinit)
exp(b0init + nsarr[1,]%*%nsinit + rinit)
plot(mort)
lines(exp(b0init + nsarr%*%nsinit + rinit))
plot(mort[-c(1:2)])
lines(exp(b0init + nsarr%*%nsinit + rinit))
length(exp(b0init + nsarr%*%nsinit + rinit))
length(rinit)
length(exp(b0init + nsarr%*%nsinit))
nsarr[,1]
length(exp(b0init + nsarr[,-c(1:2)]%*%nsinit))
length(nsinit)
length(exp(b0init + nsarr[-c(1:2),]%*%nsinit))
lines(exp(b0init + nsarr[-c(1:2),]%*%nsinit + rinit))
exp(b0init + nsarr[-c(1:2),]%*%nsinit + rinit)
lines(exp(b0init + nsarr[-c(1:2),]%*%nsinit + rinit)*pop[-c(1:2)])
k <- 3
exp(b0init + nsarr[k,]%*%nsinit + rinit)*pop[k]
exp(b0init + nsarr[k,]%*%nsinit[,k] + rinit)*pop[k]
exp(b0init + nsarr[k,]%*%nsinit[k,] + rinit)*pop[k]
exp(b0init + nsarr[k,]%*%nsinit[k,] + rinit)*pop[k]
nsarr[k,]
nsinit
exp(b0init + nsarr[k,]%*%nsinit + rinit)*pop[k]
exp(b0init + nsarr[,k]%*%nsinit + rinit)*pop[k]
nsarr[k,]
nsinit
nsarr[k,]%*% nsinit
exp(b0init + nsarr[k,]%*% nsinit + rinit[k])*pop[k]
mort[k]
model3.file
setwd(paste0(bfolder,'RSVmodels'))
j.model <- jags.model(file=model3.file,data=data, inits=inits, n.adapt=nadapt, n.chains=3)
mort[k]-flumort[k]
exp(b0init + nsarr[k,]%*% nsinit + rinit[k])*pop[k]
